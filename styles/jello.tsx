import React, { useState, useEffect } from 'react'
import { Box, keyframes } from '@chakra-ui/react'
import { motion } from 'framer-motion'

const animationKeyframes = keyframes`
/* ----------------------------------------------
 * Generated by Animista
 * Licensed under FreeBSD License.
 * See http://animista.net/license for more info. 
 * w: http://animista.net, t: @cssanimista
 * ---------------------------------------------- */

  0% {
    setTimeout(() => setFocus(false), ANIMATION_DURATION);
  }
  30% {
    transform: scale3d(1.25, 0.75, 1);
  }
  40% {
    transform: scale3d(0.75, 1.25, 1);
  }
  50% {
    transform: scale3d(1.15, 0.85, 1);
  }
  65% {
    transform: scale3d(0.95, 1.05, 1);
  }
  75% {
    transform: scale3d(1.05, 0.95, 1);
  }
  100% {
    transform: scale3d(1, 1, 1);
  }
`

const animation = `${animationKeyframes} 900ms linear both`

type Props = {
  children: React.ReactNode;
};

export const WithJelloAnimation: React.FC<Props> = ({ children }) => {
  const [focus, setFocus] = useState(false)
  const ANIMATION_DURATION = 800

  useEffect(() => {
    setTimeout(() => setFocus(false), ANIMATION_DURATION)
  }, [focus])

  return (
    <Box
      as={motion.div}
      animation={focus ? animation : ''}
      onClick={() => setFocus(true)}
    >
      {children}
    </Box>
  )
}
